syntax = "proto3";

import "scalapb/scalapb.proto";
//import "google/protobuf/timestamp.proto";
import "UserEntity.proto";

package com.jc.user.api.proto;

option (scalapb.options) = {
  package_name: "com.jc.user.api.proto"
  import: "com.jc.user.domain.proto._"
  flat_package: true
};


message CreateDepartmentReq {
    string id = 1 [(scalapb.field).type = "com.jc.user.domain.DepartmentEntity.DepartmentId"];
    string name = 2;
    string description = 3;
}

message CreateDepartmentRes {
    string id = 1 [(scalapb.field).type = "com.jc.user.domain.DepartmentEntity.DepartmentId"];
    oneof result {
        string success = 2;
        string failure = 3;
    }
}

message UpdateDepartmentReq {
    string id = 1 [(scalapb.field).type = "com.jc.user.domain.DepartmentEntity.DepartmentId"];
    string name = 2;
    string description = 3;
}

message UpdateDepartmentRes {
    string id = 1 [(scalapb.field).type = "com.jc.user.domain.DepartmentEntity.DepartmentId"];
    oneof result {
        string success = 2;
        string failure = 3;
    }
}

message RemoveDepartmentReq {
    string id = 1 [(scalapb.field).type = "com.jc.user.domain.DepartmentEntity.DepartmentId"];
}

message RemoveDepartmentRes {
    string id = 1 [(scalapb.field).type = "com.jc.user.domain.DepartmentEntity.DepartmentId"];
    oneof result {
        string success = 2;
        string failure = 3;
    }
}

message GetDepartmentReq {
    string id = 1 [(scalapb.field).type = "com.jc.user.domain.DepartmentEntity.DepartmentId"];
}

message GetDepartmentRes {
    com.jc.user.domain.proto.Department department = 1;
}

message GetDepartmentsReq {
}

message GetDepartmentsRes {
    repeated com.jc.user.domain.proto.Department departments = 1;
}

message RegisterUserReq {
    string username = 1;
    string email = 2;
    string pass = 3;
    com.jc.user.domain.proto.Address address = 4;
    com.jc.user.domain.proto.DepartmentRef department = 5;
}

message RegisterUserRes {
    string id = 1 [(scalapb.field).type = "com.jc.user.domain.UserEntity.UserId"];
    oneof result {
        string success = 2;
        string failure = 3;
    }
}

message RemoveUserReq {
    string id = 1 [(scalapb.field).type = "com.jc.user.domain.UserEntity.UserId"];
}

message RemoveUserRes {
    string id = 1 [(scalapb.field).type = "com.jc.user.domain.UserEntity.UserId"];
    oneof result {
        string success = 2;
        string failure = 3;
    }
}

message UpdateUserPasswordReq {
    string id = 1 [(scalapb.field).type = "com.jc.user.domain.UserEntity.UserId"];
    string pass = 2;
}

message UpdateUserPasswordRes {
    string id = 1 [(scalapb.field).type = "com.jc.user.domain.UserEntity.UserId"];
    oneof result {
        string success = 2;
        string failure = 3;
    }
}

message UpdateUserAddressReq {
    string id = 1 [(scalapb.field).type = "com.jc.user.domain.UserEntity.UserId"];
    com.jc.user.domain.proto.Address address = 2;
}

message UpdateUserAddressRes {
    string id = 1 [(scalapb.field).type = "com.jc.user.domain.UserEntity.UserId"];
    oneof result {
        string success = 2;
        string failure = 3;
    }
}

message UpdateUserEmailReq {
    string id = 1 [(scalapb.field).type = "com.jc.user.domain.UserEntity.UserId"];
    string email = 2;
}

message UpdateUserEmailRes {
    string id = 1 [(scalapb.field).type = "com.jc.user.domain.UserEntity.UserId"];
    oneof result {
        string success = 2;
        string failure = 3;
    }
}

message UpdateUserDepartmentReq {
    string id = 1 [(scalapb.field).type = "com.jc.user.domain.UserEntity.UserId"];
    com.jc.user.domain.proto.DepartmentRef department = 2;
}

message UpdateUserDepartmentRes {
    string id = 1 [(scalapb.field).type = "com.jc.user.domain.UserEntity.UserId"];
    oneof result {
        string success = 2;
        string failure = 3;
    }
}

message GetUserReq {
    string id = 1 [(scalapb.field).type = "com.jc.user.domain.UserEntity.UserId"];
}

message GetUserRes {
    com.jc.user.domain.proto.User user = 1;
}

message GetUsersReq {
}

message GetUsersRes {
    repeated com.jc.user.domain.proto.User users = 1;
}

enum SortOrder {
    ASC = 0;
    DESC = 1;
}

message FieldSort {
    string field = 1;
    SortOrder order = 2;
}

message SearchUsersReq {
    string query = 1 [(scalapb.field).no_box = false];
    int32 page = 2;
    int32 pageSize = 3;
    repeated FieldSort sorts = 4;
}

message SearchUsersRes {
    repeated com.jc.user.domain.proto.User users = 1;
    int32 page = 2;
    int32 pageSize = 3;
    int32 count = 4;
    oneof result {
        string success = 5;
        string failure = 6;
    }
}

message SearchUserStreamReq {
    string query = 1 [(scalapb.field).no_box = false];
    repeated FieldSort sorts = 2;
}


message SuggestUsersReq {
    string query = 1 [(scalapb.field).no_box = false];
}

message TermSuggestion {
    string text = 1 [(scalapb.field).no_box = false];
    double score = 2;
    int32 freq = 3;
}

message PropertySuggestion {
    string property = 1 [(scalapb.field).no_box = false];
    repeated TermSuggestion suggestions = 2;
}

message SuggestUsersRes {
    repeated PropertySuggestion suggestions = 1;
    oneof result {
        string success = 2;
        string failure = 3;
    }
}


service UserApiService {

    rpc CreateDepartment (CreateDepartmentReq) returns (CreateDepartmentRes) {
    }

    rpc UpdateDepartment (UpdateDepartmentReq) returns (UpdateDepartmentRes) {
    }

    rpc GetDepartment (GetDepartmentReq) returns (GetDepartmentRes) {
    }

    rpc GetDepartments (GetDepartmentsReq) returns (GetDepartmentsRes) {
    }

    rpc RegisterUser (RegisterUserReq) returns (RegisterUserRes) {
    }

    rpc RemoveUser (RemoveUserReq) returns (RemoveUserRes) {
    }

    rpc UpdateUserEmail (UpdateUserEmailReq) returns (UpdateUserEmailRes) {
    }

    rpc UpdateUserPassword (UpdateUserPasswordReq) returns (UpdateUserPasswordRes) {
    }

    rpc UpdateUserAddress (UpdateUserAddressReq) returns (UpdateUserAddressRes) {
    }

    rpc UpdateUserDepartment (UpdateUserDepartmentReq) returns (UpdateUserDepartmentRes) {
    }

    rpc GetUser (GetUserReq) returns (GetUserRes) {
    }

    rpc GetUsers (GetUsersReq) returns (GetUsersRes) {
    }

    rpc SearchUsers (SearchUsersReq) returns (SearchUsersRes) {
    }

    rpc SearchUserStream (SearchUserStreamReq) returns (stream com.jc.user.domain.proto.User) {
    }

    rpc SuggestUsers (SuggestUsersReq) returns (SuggestUsersRes) {
    }
}
