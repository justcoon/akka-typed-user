akka {
  actor {
//    provider = cluster
    provider = akka.cluster.ClusterActorRefProvider

    allow-java-serialization = off

    serializers {
      kryo = "io.altoo.akka.serialization.kryo.KryoSerializer"
      proto = "akka.remote.serialization.ProtobufSerializer"
    }

    serialization-bindings {
      "scalapb.GeneratedMessage" = proto
      "java.io.Serializable" = kryo
    }
  }

  //akka 2.6
  remote {
    enabled-transports = ["akka.remote.artery.canonical"]
    artery.canonical {
      hostname = "127.0.0.1"
      //      port = ${REMOTE_PORT}
      port = 2551
    }
  }

  // The following settings are for super fast automatic removal of unreachable nodes and not suitable for production!
  cluster {
    //    auto-down-unreachable-after = 0 seconds
    //    unreachable-nodes-reaper-interval = 250 milliseconds
    //
    //    failure-detector {
    //      acceptable-heartbeat-pause = 1 second
    //      hearbeat-interval = 250 milliseconds
    //      threshold = 4.0
    //    }


    seed-nodes = [
      "akka://user@127.0.0.1:2551",
      "akka://user@127.0.0.1:2552",
      "akka://user@127.0.0.1:2553"
    ]

    min-nr-of-members = 1
    auto-down-unreachable-after = 30s
  }

  //  extensions = [
  //    akka.persistence.Persistence,
  //    de.heikoseeberger.constructr.ConstructrExtension
  //  ]

  extensions = [
    akka.persistence.Persistence
  ]

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"


  persistence {
    journal {
      auto-start-journals = [""]
      plugin = cassandra-journal
    }
    snapshot-store {
      plugin = cassandra-snapshot-store
    }
  }

  http.server.preview.enable-http2 = on
}

cassandra-journal {
  keyspace = "c_user_journal"
  write-static-column-compat = off
}

cassandra-snapshot-store {
  # Name of the keyspace to be created/used by the snapshot store
  keyspace = "c_user_snapshot"
}

cassandra-query-journal {
  refresh-interval = 20ms
  first-time-bucket = "20200120T00:00"
}

elasticsearch {
  addresses = ["localhost:9200"]
  index-name = "c_user"
}

kafka {
  addresses = ["localhost:9092"]
  topic = "c-user"
}


rest-api {
  address = 0.0.0.0
  port = 8000
  repository-timeout = 250 milliseconds
}


grpc-api {
  address = 0.0.0.0
  port = 8010
  repository-timeout = 250 milliseconds
}
